 ✔ Character.AttackMarker Pre and Post time @done (17-10-15 20:28)
 ✔ Assign the AttackMarker in Constructor @done (17-10-15 20:28)
 ✔ Attack by using the AttackMarker @done (17-10-15 20:35)
 ✔ RuleBook in Unity @done (17-10-15 21:01)
 ✔ Character SignalSystem @done (17-10-15 21:23)
 ✔ OnPhysicalStressTaken @done (17-10-15 21:39)
 ✔ LifeBarVisualizer @done (17-10-15 21:47)
 ✔ Character.AttackMarker Pre and Post time visualizer in Unity @done (17-10-15 22:44)
 ✔ PhysicalDamage Seems to be applied multiple times, also backwards @done (17-10-15 22:44)
 ✔ Log what's happening with the log observer -> on every update, costly, so only in debug mode @done (17-10-18 15:02)
 ✔ Format the logs for the console @done (17-10-18 15:04)
 ✔ Format logs for markup @done (17-10-18 15:04)
 ✔ ChaseState: Don't move if already able to attack the character @done (17-10-18 15:18)
 ✔ Knob on the Tabletop to show/hide logs @done (17-10-18 15:35)
 ✔ Merge Tabletop and Level in the Unity Hierarchy @done (17-10-18 15:38)
 ✔ Mask of Enemies, use the defined tags on the Character -> on startup set the tag according to the CharacterData type @done (17-10-18 15:44)
 ✔ Character types Player, Monster ... @done (17-10-18 20:57)
 ✔ Try out the Analytics logger @done (17-10-18 22:53)
 ✔ Don't move if already possible to attack the enemy -> Check if enemy is on the attackshape  first @done (17-10-18 23:02)
 ✔ DefeatedState @done (17-10-18 23:22)
  ✔ Disable the Character @done (17-10-18 23:23)
  ✔ De-register from the pool @done (17-10-18 23:43)
 ✔ Unittests! @done (17-10-21 21:04)
  ✔ GameMaster types and excludes unittests @done (17-10-19 22:52)
  ✔ Cost on Items @done (17-10-21 19:00)
  ✔ Inventory Tests @done (17-10-21 19:00)
 ✔ Loot @done (17-10-21 22:42)
  ✔ DropLoot @done (17-10-21 22:42)
  ✔ PickUpLoot @done (17-10-21 22:42)
 ✔ Negative Aspect @done (17-10-21 22:52)

Conversation System:
 ✔ Inkle system @done (17-10-22 23:01)
 ✔ Click on NPC @done (17-10-22 23:01)
 ✔ Start the Conversation of the NPC @done (17-10-22 22:59)
 ✔ Exit the conversation @done (17-10-27 21:36)
 ✔ put state on github @done (17-10-28 18:04)
 ✔ Only the forward vector is necessary in the AttackShape @done (17-10-30 19:13)
 ✔ Use the distance in the check as well @done (17-10-30 19:34)
 ✔ Change GridPoint to (Float)Point @done (17-10-31 22:45)
 ✔ Remove the stepped rotation approach for the Transform @done (17-10-31 22:45)
 ✔ Tests for GridPoint @done (17-10-31 22:54)
 ✔ Transform to float @done (17-11-04 13:59)
 ✔ Keep the AttackShapeMarker in line with the Characters position when checking @done (17-11-04 14:26)
 ✔ Just compare the distance with a range!!!! @done (17-11-04 17:59)
 ✔ Get the rotation of the chars in unit right @done (17-11-04 19:46)
 ✔ Radius on Characters @done (17-11-04 19:46)
 ✔ For radius, take the radius of the Character into account @done (17-11-04 19:46)
 ✔ AlertnessRadius @done (17-11-04 20:01)
 ✔ Unity AttackState has to be fixed @done (17-11-04 20:01)
 ✔ AttackShape to circles and angles @done (17-11-04 20:02)
  ✔ AttackShape to Radius and Angle, can have multiple shapes @done (17-11-04 20:02)
  ✔ Characters on gridpoints -> default exclude the caller @done (17-11-04 20:02)
 ✔ AlertnessRadius in units @done (17-11-04 20:02)
  ✔ Infer from the CharacterData @done (17-11-04 20:02)
 ☐ Add the Attacker radius as well

 ☐ Set default values for AttackShape

Simple Code Refactor:
 ☐ Rename Point to Vector
 ☐ Return only Point Structs
 ☐ Location not necessary, point not necessary
 ☐ CharactersOnGridPoint is obsolete
 ☐ Tests for the distance check
 ☐ Tests for the segment check


I///////////////////////////////////////////:
Backlog:

Unity:
 ☐ Enemy AI
  ☐ ChasePersistency in sec
  ☐ Trigger them when being attacked
 ☐ In InputController, use the list of enemies to detect hit
 ☐ Load Level in Editor
 ☐ Change the rotation system for the other states as well, take it from MoveToNPC
 ☐ Shorten names of classes, e.g. NPCCharacter to NPC
 ☐ "CharacterData" replace with "Data"?
 ☐ Show a damage number for the Attack
 ☐ Game Startup Procedure
  ☐ Init Rulebook
  ☐ If New Game
   ☐ Load Default Environment
  ☐ If Load
   ☐ Load Saved Game State
 ☐ Place the Characters on the Grid properly, find a good spot for each
 ☐ When moving slider: SendMessage cannot be called during Awake, CheckConsistency, or OnValidate
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)
 ☐ Visualize the currently active tags

Inkle:
 ☐ Stepwise through the dialog
 ☐ Show the response
 ☐ Update the image
 ☐ Set to Conversation Mode
   ☐ Block everything until conversation is ending
 ☐ Attach callbacks
 ☐ Use the tags

Aspect:
 ☐ Levels of Aspects
 ☐ Equilibrium Aspect
 ☐ Make possible to add Aspects to other values too, e.g. Range of Attack

Character:
 ☐ Pickup of Items needs a Signal
 ☐ Reverse PhysicalStress -> empty the slider bar
 ☐ Character.Transform -> AttackShape rotate until faces the character to attack
 ☐ AttackMarker.Stunt
 ☐ Multiple AttackMarkers per Character?
 ☐ Party
  ☐ Partyleader
 ☐ Attack
  ☐ RangedWeapons
  ☐ Magic
 ☐ Defend
  ☐ RangedWeapons
  ☐ Magic
 ☐ Repair
  ☐ Item
 ☐ Heal
  ☐ Stress
 ☐ ImproveSkill(skill)
 ☐ LearnSkill(skill)
 ☐ AddNewAspect(aspect)
 ☐ EditAspect(aspect)
 ☐ Skills -> Rework the current tags
 Signals:
  ☐ OnAttack
  ☐ OnDefend
  ☐ OnConsequenceTaken

GameMaster:
 ☐ CharactersOnGridPoint: Option to Exclude the Caller
 ☐ Remove CurrentCell
 ☐ Remove CurrentTags
 ☐ GameMaster.CurrentCell.Characters: Revisit the CurrentCell, rather get the CurrentCell per Character

Item:
 ☐ Replace Item in Equipment with a stand-in object later that only holds the necessary, changeable attributes
 ☐ Serialize, What if serialized and then equipped??? -> Item should be unique

Levelbuilder:
 ☐ Add enemies to the Tiles
 ☐ Add treasure to the Tiles
 ☐ Add Quest things to the Tiles

LogObserver:
 ☐ Have an option to disable the log observer (when building for production maybe?)

Quest System:

Save:
 ☐ CurrentLocation of Character
 ☐ CurrentCell of Character
 ☐ Party
 ☐ Contents of the Cells

Stunt:
 ☐ Cost
 ☐ FatePoints / ActionPoints






        public Character[] EnemiesInReach()
        {
            List<Character> enemies = new List<Character>();
            for (int i = 0; i < AttackShape.Length; i++)
            {
                GridPoint point = new GridPoint(Transform.Map(AttackShape[i]));
                foreach (Character enemy in GameMaster.CharactersOnGridPoint(point, Enemies))
                {
                    enemies.Add(enemy);
                }
            }
            return enemies.ToArray();
        }

